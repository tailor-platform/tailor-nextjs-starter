import type { CodegenConfig } from "@graphql-codegen/cli";

const generateConfig = {
  // TypeScript enum is not type-safe so enabled this option to use constants instead
  enumsAsConst: true,
  // I would like here to set to true, but with true codegen does not generate fragment as readonly that causes some inconvenience in type-checking
  immutableTypes: false,
  // Removes `__typename` field due to unnecessity
  skipTypename: true,
  // Scalar types are always any by defult so use unknown for more type-safety
  defaultScalarType: "unknown",
  // Map scalar types explicitly
  scalars: {
    Time: {
      input: "unknown",
      output: "string",
    },
    Date: {
      input: "unknown",
      output: "string",
    },
    DateTime: {
      input: "unknown",
      output: "string",
    },
  },
};

// TODO: This starter configures the backend as our CRM template (you can see it at https://www.tailor.tech/templates/crm) as example
// Replace the `schema` below with your own GraphQL backend deployed on Tailor Platform as needed.
const config: CodegenConfig = {
  hooks: {
    afterAllFileWrite: ["eslint --fix", "prettier --write"],
  },
  schema: "https://crm-gzgixosz.erp.dev/query",
  generates: {
    "src/types/graphql.ts": {
      config: generateConfig,
      plugins: [
        "typescript",
        {
          add: {
            content: [
              "// Code generated by graphql-codegen. DO NOT EDIT.\n",
              "/* eslint-disable @typescript-eslint/naming-convention */",
              "/* eslint-disable todo-comment/ticket-url */",
            ],
          },
        },
      ],
    },
    "src/graphql/": {
      documents: "src/graphql/*.graphql",
      preset: "near-operation-file",
      presetConfig: {
        extentensions: ".generated.tsx",
        baseTypesPath: "../types/graphql.ts",
      },
      config: generateConfig,
      plugins: [
        {
          add: {
            content: [
              "// Code generated by graphql-codegen. DO NOT EDIT.\n",
              "/* eslint-disable import/order */",
              "/* eslint-disable import/newline-after-import */",
            ],
          },
        },
        "typescript-operations",
        "typescript-react-apollo",
      ],
    },
  },
};

export default config;
